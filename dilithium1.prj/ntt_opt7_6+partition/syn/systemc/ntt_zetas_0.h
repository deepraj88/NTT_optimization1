// ==============================================================
// File generated on Sat Dec 12 09:54:58 EST 2020
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
// SW Build 2405991 on Thu Dec  6 23:36:41 MST 2018
// IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __ntt_zetas_0_H__
#define __ntt_zetas_0_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct ntt_zetas_0_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 23;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(ntt_zetas_0_ram) {
        ram[0] = "0b00000000000000000000000";
        ram[1] = "0b00000000110010011110111";
        ram[2] = "0b10110000001000100000011";
        ram[3] = "0b11101111111010100000100";
        ram[4] = "0b00000111001111001000100";
        ram[5] = "0b11101000000000100011001";
        ram[6] = "0b11100101000000100101001";
        ram[7] = "0b00001110001111000100100";
        ram[8] = "0b00110111101111000101011";
        ram[9] = "0b01000111110100100101011";
        ram[10] = "0b11110100110010010101110";
        ram[11] = "0b10111111111010010000000";
        ram[12] = "0b01011111001101001110101";
        ram[13] = "0b10100111101101100001010";
        ram[14] = "0b01011110111101001001001";
        ram[15] = "0b01010001110010100100111";
        ram[16] = "0b01010011001011001011000";
        ram[17] = "0b00011111010000001110000";
        ram[18] = "0b11011110110010110100101";
        ram[19] = "0b01101101011011110001000";
        ram[20] = "0b11101110111110110010001";
        ram[21] = "0b11011101100101010100001";
        ram[22] = "0b01001111111100101101000";
        ram[23] = "0b10111111011001101111100";
        ram[24] = "0b10111111000110111010111";
        ram[25] = "0b10001001111101011101000";
        ram[26] = "0b11010101000010011111000";
        ram[27] = "0b10011011101110010011001";
        ram[28] = "0b00110101101000000110101";
        ram[29] = "0b11111111001010000100011";
        ram[30] = "0b01111010011001000000001";
        ram[31] = "0b00001000100010111000101";
        ram[32] = "0b01010010100101001100111";
        ram[33] = "0b00000010111011000100000";
        ram[34] = "0b01011101111010011001101";
        ram[35] = "0b01101011101111011000101";
        ram[36] = "0b11001101000010100000100";
        ram[37] = "0b10010010001000000101101";
        ram[38] = "0b10110010010011111010101";
        ram[39] = "0b01110111011111010101111";
        ram[40] = "0b10001001111010110000110";
        ram[41] = "0b10100010110111001111101";
        ram[42] = "0b01101101000101010010110";
        ram[43] = "0b10101000001111001000010";
        ram[44] = "0b01101100000010000000000";
        ram[45] = "0b11110110100101001001110";
        ram[46] = "0b01000111101011010011100";
        ram[47] = "0b11101111010010101011110";
        ram[48] = "0b11001011111001000111110";
        ram[49] = "0b11001101100101011010111";
        ram[50] = "0b01101010111111000011110";
        ram[51] = "0b10001011000111101011010";
        ram[52] = "0b01101011000010000111111";
        ram[53] = "0b10111110011011000011000";
        ram[54] = "0b11001110111010001011101";
        ram[55] = "0b01110000111001110001100";
        ram[56] = "0b00011000110001110101000";
        ram[57] = "0b00010000001101110011010";
        ram[58] = "0b00011101000111101110110";
        ram[59] = "0b01110110011100001010011";
        ram[60] = "0b01110111000010100110100";
        ram[61] = "0b10110001101110000110001";
        ram[62] = "0b00111111001110101010100";
        ram[63] = "0b10101010010111100101110";
        ram[64] = "0b10000111110011011100110";
        ram[65] = "0b11010001000110010000010";
        ram[66] = "0b10001111100000111010000";
        ram[67] = "0b10100010111100000011010";
        ram[68] = "0b11010011011011001011110";
        ram[69] = "0b01101010000100111101110";
        ram[70] = "0b01000010011010111000111";
        ram[71] = "0b11001111010111110111100";
        ram[72] = "0b11011001010111101110110";
        ram[73] = "0b00111011001011101110010";
        ram[74] = "0b10000011001000001110011";
        ram[75] = "0b11100001001110011110111";
        ram[76] = "0b10011110011001010000001";
        ram[77] = "0b10011111011001010101111";
        ram[78] = "0b10010000111000011100001";
        ram[79] = "0b00000011110111111001010";
        ram[80] = "0b01101000001000011110010";
        ram[81] = "0b11100001101111010000110";
        ram[82] = "0b01000001100011000111000";
        ram[83] = "0b01010010110111010011111";
        ram[84] = "0b10100101001011110100100";
        ram[85] = "0b10001111000010001001100";
        ram[86] = "0b11110011001101001101110";
        ram[87] = "0b10110100001010000001010";
        ram[88] = "0b11101011010001010000011";
        ram[89] = "0b11011010010000100010100";
        ram[90] = "0b11111111000011000111100";
        ram[91] = "0b11010111110100111111000";
        ram[92] = "0b11110100000101111011110";
        ram[93] = "0b00101001001010111010100";
        ram[94] = "0b00111000100010101100011";
        ram[95] = "0b11010100000110001100011";
        ram[96] = "0b10011001101101111101010";
        ram[97] = "0b00001000000101011110000";
        ram[98] = "0b00001111100010000010111";
        ram[99] = "0b01011110100010110001000";
        ram[100] = "0b00000001010110100000000";
        ram[101] = "0b11011110001011010111111";
        ram[102] = "0b00011011100110101000100";
        ram[103] = "0b01111000110011101011010";
        ram[104] = "0b10001110000101111001011";
        ram[105] = "0b11111111011111001111111";
        ram[106] = "0b00110010011100101001000";
        ram[107] = "0b10011100100100111000001";
        ram[108] = "0b01001000111010101101100";
        ram[109] = "0b11111001010011111100000";
        ram[110] = "0b00010111001100010100001";
        ram[111] = "0b11010111100100000001001";
        ram[112] = "0b00000101110010001101100";
        ram[113] = "0b10010011010100000001001";
        ram[114] = "0b01100000011011011000010";
        ram[115] = "0b11000111001111111110111";
        ram[116] = "0b10110110001110010010100";
        ram[117] = "0b11111010010101011100001";
        ram[118] = "0b00101000001001100000101";
        ram[119] = "0b00101000111011110010010";
        ram[120] = "0b00100111001111000100101";
        ram[121] = "0b11001111011000011100001";
        ram[122] = "0b11100110111100101000101";
        ram[123] = "0b11010011110100000000011";
        ram[124] = "0b10100011100111010100011";
        ram[125] = "0b10001001010011110011101";
        ram[126] = "0b10010001000000001011000";
        ram[127] = "0b01110101001011111011001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(ntt_zetas_0) {


static const unsigned DataWidth = 23;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


ntt_zetas_0_ram* meminst;


SC_CTOR(ntt_zetas_0) {
meminst = new ntt_zetas_0_ram("ntt_zetas_0_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~ntt_zetas_0() {
    delete meminst;
}


};//endmodule
#endif
