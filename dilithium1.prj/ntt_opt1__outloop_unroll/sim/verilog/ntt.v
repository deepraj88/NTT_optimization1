// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ntt,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200tfbg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.724000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=64,HLS_SYN_FF=3300,HLS_SYN_LUT=4596,HLS_VERSION=2018_3}" *)

module ntt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_address0,
        p_ce0,
        p_we0,
        p_d0,
        p_q0,
        p_address1,
        p_ce1,
        p_we1,
        p_d1,
        p_q1
);

parameter    ap_ST_fsm_state1 = 73'd1;
parameter    ap_ST_fsm_state2 = 73'd2;
parameter    ap_ST_fsm_state3 = 73'd4;
parameter    ap_ST_fsm_state4 = 73'd8;
parameter    ap_ST_fsm_state5 = 73'd16;
parameter    ap_ST_fsm_state6 = 73'd32;
parameter    ap_ST_fsm_state7 = 73'd64;
parameter    ap_ST_fsm_state8 = 73'd128;
parameter    ap_ST_fsm_state9 = 73'd256;
parameter    ap_ST_fsm_state10 = 73'd512;
parameter    ap_ST_fsm_state11 = 73'd1024;
parameter    ap_ST_fsm_state12 = 73'd2048;
parameter    ap_ST_fsm_state13 = 73'd4096;
parameter    ap_ST_fsm_state14 = 73'd8192;
parameter    ap_ST_fsm_state15 = 73'd16384;
parameter    ap_ST_fsm_state16 = 73'd32768;
parameter    ap_ST_fsm_state17 = 73'd65536;
parameter    ap_ST_fsm_state18 = 73'd131072;
parameter    ap_ST_fsm_state19 = 73'd262144;
parameter    ap_ST_fsm_state20 = 73'd524288;
parameter    ap_ST_fsm_state21 = 73'd1048576;
parameter    ap_ST_fsm_state22 = 73'd2097152;
parameter    ap_ST_fsm_state23 = 73'd4194304;
parameter    ap_ST_fsm_state24 = 73'd8388608;
parameter    ap_ST_fsm_state25 = 73'd16777216;
parameter    ap_ST_fsm_state26 = 73'd33554432;
parameter    ap_ST_fsm_state27 = 73'd67108864;
parameter    ap_ST_fsm_state28 = 73'd134217728;
parameter    ap_ST_fsm_state29 = 73'd268435456;
parameter    ap_ST_fsm_state30 = 73'd536870912;
parameter    ap_ST_fsm_state31 = 73'd1073741824;
parameter    ap_ST_fsm_state32 = 73'd2147483648;
parameter    ap_ST_fsm_state33 = 73'd4294967296;
parameter    ap_ST_fsm_state34 = 73'd8589934592;
parameter    ap_ST_fsm_state35 = 73'd17179869184;
parameter    ap_ST_fsm_state36 = 73'd34359738368;
parameter    ap_ST_fsm_state37 = 73'd68719476736;
parameter    ap_ST_fsm_state38 = 73'd137438953472;
parameter    ap_ST_fsm_state39 = 73'd274877906944;
parameter    ap_ST_fsm_state40 = 73'd549755813888;
parameter    ap_ST_fsm_state41 = 73'd1099511627776;
parameter    ap_ST_fsm_state42 = 73'd2199023255552;
parameter    ap_ST_fsm_state43 = 73'd4398046511104;
parameter    ap_ST_fsm_state44 = 73'd8796093022208;
parameter    ap_ST_fsm_state45 = 73'd17592186044416;
parameter    ap_ST_fsm_state46 = 73'd35184372088832;
parameter    ap_ST_fsm_state47 = 73'd70368744177664;
parameter    ap_ST_fsm_state48 = 73'd140737488355328;
parameter    ap_ST_fsm_state49 = 73'd281474976710656;
parameter    ap_ST_fsm_state50 = 73'd562949953421312;
parameter    ap_ST_fsm_state51 = 73'd1125899906842624;
parameter    ap_ST_fsm_state52 = 73'd2251799813685248;
parameter    ap_ST_fsm_state53 = 73'd4503599627370496;
parameter    ap_ST_fsm_state54 = 73'd9007199254740992;
parameter    ap_ST_fsm_state55 = 73'd18014398509481984;
parameter    ap_ST_fsm_state56 = 73'd36028797018963968;
parameter    ap_ST_fsm_state57 = 73'd72057594037927936;
parameter    ap_ST_fsm_state58 = 73'd144115188075855872;
parameter    ap_ST_fsm_state59 = 73'd288230376151711744;
parameter    ap_ST_fsm_state60 = 73'd576460752303423488;
parameter    ap_ST_fsm_state61 = 73'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 73'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 73'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 73'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 73'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 73'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 73'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 73'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 73'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 73'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 73'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 73'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 73'd4722366482869645213696;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] p_address0;
output   p_ce0;
output   p_we0;
output  [31:0] p_d0;
input  [31:0] p_q0;
output  [7:0] p_address1;
output   p_ce1;
output   p_we1;
output  [31:0] p_d1;
input  [31:0] p_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] p_address0;
reg p_ce0;
reg p_we0;
reg[31:0] p_d0;
reg[7:0] p_address1;
reg p_ce1;
reg p_we1;
reg[31:0] p_d1;

(* fsm_encoding = "none" *) reg   [72:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] zetas_address0;
reg    zetas_ce0;
wire   [22:0] zetas_q0;
reg   [31:0] reg_574;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state68;
wire   [1:0] k_2_fu_585_p2;
reg   [1:0] k_2_reg_1762;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_579_p2;
wire   [31:0] tmp_4_fu_596_p2;
reg   [31:0] tmp_4_reg_1772;
wire    ap_CS_fsm_state3;
wire   [31:0] start_fu_608_p3;
reg   [31:0] start_reg_1777;
wire   [54:0] tmp_6_cast_fu_616_p1;
reg   [54:0] tmp_6_cast_reg_1782;
reg   [7:0] p_addr_reg_1790;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_8_fu_620_p2;
reg   [7:0] p_addr_1_reg_1796;
wire   [31:0] j_1_fu_641_p2;
reg   [31:0] j_1_reg_1802;
wire   [31:0] tmp_12_fu_647_p2;
wire   [54:0] temp_1_fu_656_p2;
reg   [54:0] temp_1_reg_1812;
wire    ap_CS_fsm_state6;
wire  signed [31:0] tmp_26_fu_661_p1;
reg  signed [31:0] tmp_26_reg_1817;
wire   [31:0] temp_18_fu_665_p2;
reg   [31:0] temp_18_reg_1822;
wire    ap_CS_fsm_state7;
wire   [54:0] t_1_fu_673_p2;
reg   [54:0] t_1_reg_1827;
wire    ap_CS_fsm_state8;
reg   [23:0] tmp_18_reg_1832;
wire    ap_CS_fsm_state9;
wire   [2:0] k_2_1_fu_733_p2;
reg   [2:0] k_2_1_reg_1841;
wire    ap_CS_fsm_state11;
wire   [0:0] exitcond2_fu_727_p2;
wire   [31:0] tmp_4_1_fu_744_p2;
reg   [31:0] tmp_4_1_reg_1851;
wire    ap_CS_fsm_state12;
wire   [31:0] start_1_fu_756_p3;
reg   [31:0] start_1_reg_1856;
wire   [54:0] tmp_6_1_cast_fu_764_p1;
reg   [54:0] tmp_6_1_cast_reg_1861;
reg   [7:0] p_addr_2_reg_1869;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_8_1_fu_768_p2;
reg   [7:0] p_addr_3_reg_1875;
wire   [31:0] j_1_1_fu_789_p2;
reg   [31:0] j_1_1_reg_1881;
wire   [31:0] tmp_14_1_fu_795_p2;
wire   [54:0] temp_fu_804_p2;
reg   [54:0] temp_reg_1891;
wire    ap_CS_fsm_state15;
wire  signed [31:0] tmp_27_fu_809_p1;
reg  signed [31:0] tmp_27_reg_1896;
wire   [31:0] temp_19_fu_813_p2;
reg   [31:0] temp_19_reg_1901;
wire    ap_CS_fsm_state16;
wire   [54:0] t_4_fu_821_p2;
reg   [54:0] t_4_reg_1906;
wire    ap_CS_fsm_state17;
reg   [23:0] tmp_19_reg_1911;
wire    ap_CS_fsm_state18;
wire   [3:0] k_2_2_fu_881_p2;
reg   [3:0] k_2_2_reg_1920;
wire    ap_CS_fsm_state20;
wire   [0:0] exitcond3_fu_875_p2;
wire   [31:0] tmp_4_2_fu_892_p2;
reg   [31:0] tmp_4_2_reg_1930;
wire    ap_CS_fsm_state21;
wire   [31:0] start_2_fu_904_p3;
reg   [31:0] start_2_reg_1935;
wire   [54:0] tmp_6_2_cast_fu_912_p1;
reg   [54:0] tmp_6_2_cast_reg_1940;
reg   [7:0] p_addr_4_reg_1948;
wire    ap_CS_fsm_state22;
wire   [0:0] tmp_8_2_fu_916_p2;
reg   [7:0] p_addr_5_reg_1954;
wire   [31:0] j_1_2_fu_937_p2;
reg   [31:0] j_1_2_reg_1960;
wire   [31:0] tmp_14_2_fu_943_p2;
wire   [54:0] temp_3_fu_952_p2;
reg   [54:0] temp_3_reg_1970;
wire    ap_CS_fsm_state24;
wire  signed [31:0] tmp_28_fu_957_p1;
reg  signed [31:0] tmp_28_reg_1975;
wire   [31:0] temp_20_fu_961_p2;
reg   [31:0] temp_20_reg_1980;
wire    ap_CS_fsm_state25;
wire   [54:0] t_7_fu_969_p2;
reg   [54:0] t_7_reg_1985;
wire    ap_CS_fsm_state26;
reg   [23:0] tmp_20_reg_1990;
wire    ap_CS_fsm_state27;
wire   [4:0] k_2_3_fu_1029_p2;
reg   [4:0] k_2_3_reg_1999;
wire    ap_CS_fsm_state29;
wire   [0:0] exitcond4_fu_1023_p2;
wire   [31:0] tmp_4_3_fu_1040_p2;
reg   [31:0] tmp_4_3_reg_2009;
wire    ap_CS_fsm_state30;
wire   [31:0] start_3_fu_1052_p3;
reg   [31:0] start_3_reg_2014;
wire   [54:0] tmp_6_3_cast_fu_1060_p1;
reg   [54:0] tmp_6_3_cast_reg_2019;
reg   [7:0] p_addr_6_reg_2027;
wire    ap_CS_fsm_state31;
wire   [0:0] tmp_8_3_fu_1064_p2;
reg   [7:0] p_addr_7_reg_2033;
wire   [31:0] j_1_3_fu_1085_p2;
reg   [31:0] j_1_3_reg_2039;
wire   [31:0] tmp_14_3_fu_1091_p2;
wire   [54:0] temp_5_fu_1100_p2;
reg   [54:0] temp_5_reg_2049;
wire    ap_CS_fsm_state33;
wire  signed [31:0] tmp_29_fu_1105_p1;
reg  signed [31:0] tmp_29_reg_2054;
wire   [31:0] temp_21_fu_1109_p2;
reg   [31:0] temp_21_reg_2059;
wire    ap_CS_fsm_state34;
wire   [54:0] t_10_fu_1117_p2;
reg   [54:0] t_10_reg_2064;
wire    ap_CS_fsm_state35;
reg   [23:0] tmp_21_reg_2069;
wire    ap_CS_fsm_state36;
wire   [5:0] k_2_4_fu_1177_p2;
reg   [5:0] k_2_4_reg_2078;
wire    ap_CS_fsm_state38;
wire   [0:0] exitcond5_fu_1171_p2;
wire   [31:0] tmp_4_4_fu_1188_p2;
reg   [31:0] tmp_4_4_reg_2088;
wire    ap_CS_fsm_state39;
wire   [31:0] start_4_fu_1200_p3;
reg   [31:0] start_4_reg_2093;
wire   [54:0] tmp_6_4_cast_fu_1208_p1;
reg   [54:0] tmp_6_4_cast_reg_2098;
reg   [7:0] p_addr_8_reg_2106;
wire    ap_CS_fsm_state40;
wire   [0:0] tmp_8_4_fu_1212_p2;
reg   [7:0] p_addr_9_reg_2112;
wire   [31:0] j_1_4_fu_1233_p2;
reg   [31:0] j_1_4_reg_2118;
wire   [31:0] tmp_14_4_fu_1239_p2;
wire   [54:0] temp_7_fu_1248_p2;
reg   [54:0] temp_7_reg_2128;
wire    ap_CS_fsm_state42;
wire  signed [31:0] tmp_30_fu_1253_p1;
reg  signed [31:0] tmp_30_reg_2133;
wire   [31:0] temp_22_fu_1257_p2;
reg   [31:0] temp_22_reg_2138;
wire    ap_CS_fsm_state43;
wire   [54:0] t_13_fu_1265_p2;
reg   [54:0] t_13_reg_2143;
wire    ap_CS_fsm_state44;
reg   [23:0] tmp_22_reg_2148;
wire    ap_CS_fsm_state45;
wire   [6:0] k_2_5_fu_1325_p2;
reg   [6:0] k_2_5_reg_2157;
wire    ap_CS_fsm_state47;
wire   [0:0] exitcond6_fu_1319_p2;
wire   [31:0] tmp_4_5_fu_1336_p2;
reg   [31:0] tmp_4_5_reg_2167;
wire    ap_CS_fsm_state48;
wire   [31:0] start_5_fu_1348_p3;
reg   [31:0] start_5_reg_2172;
wire   [54:0] tmp_6_5_cast_fu_1356_p1;
reg   [54:0] tmp_6_5_cast_reg_2177;
reg   [7:0] p_addr_10_reg_2185;
wire    ap_CS_fsm_state49;
wire   [0:0] tmp_8_5_fu_1360_p2;
reg   [7:0] p_addr_11_reg_2191;
wire   [31:0] j_1_5_fu_1381_p2;
reg   [31:0] j_1_5_reg_2197;
wire   [31:0] tmp_14_5_fu_1387_p2;
wire   [54:0] temp_9_fu_1396_p2;
reg   [54:0] temp_9_reg_2207;
wire    ap_CS_fsm_state51;
wire  signed [31:0] tmp_31_fu_1401_p1;
reg  signed [31:0] tmp_31_reg_2212;
wire   [31:0] temp_23_fu_1405_p2;
reg   [31:0] temp_23_reg_2217;
wire    ap_CS_fsm_state52;
wire   [54:0] t_16_fu_1413_p2;
reg   [54:0] t_16_reg_2222;
wire    ap_CS_fsm_state53;
reg   [23:0] tmp_23_reg_2227;
wire    ap_CS_fsm_state54;
wire   [7:0] k_2_6_fu_1473_p2;
reg   [7:0] k_2_6_reg_2236;
wire    ap_CS_fsm_state56;
wire   [0:0] exitcond_fu_1467_p2;
wire   [31:0] tmp_4_6_fu_1484_p2;
reg   [31:0] tmp_4_6_reg_2246;
wire    ap_CS_fsm_state57;
wire   [31:0] start_6_fu_1496_p3;
reg   [31:0] start_6_reg_2251;
wire   [54:0] tmp_6_6_cast_fu_1504_p1;
reg   [54:0] tmp_6_6_cast_reg_2256;
reg   [7:0] p_addr_12_reg_2264;
wire    ap_CS_fsm_state58;
wire   [0:0] tmp_8_6_fu_1508_p2;
reg   [7:0] p_addr_13_reg_2270;
wire   [31:0] j_1_6_fu_1529_p2;
reg   [31:0] j_1_6_reg_2276;
wire   [31:0] tmp_14_6_fu_1535_p2;
wire   [54:0] temp_14_fu_1544_p2;
reg   [54:0] temp_14_reg_2286;
wire    ap_CS_fsm_state60;
wire  signed [31:0] tmp_33_fu_1549_p1;
reg  signed [31:0] tmp_33_reg_2291;
wire   [31:0] temp_24_fu_1553_p2;
reg   [31:0] temp_24_reg_2296;
wire    ap_CS_fsm_state61;
wire   [54:0] t_19_fu_1561_p2;
reg   [54:0] t_19_reg_2301;
wire    ap_CS_fsm_state62;
reg   [23:0] tmp_24_reg_2306;
wire    ap_CS_fsm_state63;
wire   [31:0] k_2_7_fu_1623_p2;
reg   [31:0] k_2_7_reg_2315;
wire    ap_CS_fsm_state65;
wire   [0:0] tmp_32_fu_1615_p3;
wire   [8:0] tmp_4_7_fu_1634_p2;
reg   [8:0] tmp_4_7_reg_2325;
wire    ap_CS_fsm_state66;
wire   [8:0] start_7_fu_1646_p3;
reg   [8:0] start_7_reg_2330;
wire   [54:0] tmp_6_7_cast_fu_1654_p1;
reg   [54:0] tmp_6_7_cast_reg_2335;
wire   [8:0] tmp_9_7_fu_1663_p2;
reg   [8:0] tmp_9_7_reg_2343;
wire    ap_CS_fsm_state67;
wire   [0:0] tmp_8_7_fu_1658_p2;
reg   [7:0] p_addr_14_reg_2348;
reg   [7:0] p_addr_15_reg_2354;
wire   [8:0] tmp_14_7_fu_1679_p2;
wire   [54:0] temp_16_fu_1688_p2;
reg   [54:0] temp_16_reg_2365;
wire    ap_CS_fsm_state69;
wire  signed [31:0] tmp_34_fu_1693_p1;
reg  signed [31:0] tmp_34_reg_2370;
wire   [31:0] temp_25_fu_1697_p2;
reg   [31:0] temp_25_reg_2375;
wire    ap_CS_fsm_state70;
wire   [54:0] t_22_fu_1705_p2;
reg   [54:0] t_22_reg_2380;
wire    ap_CS_fsm_state71;
reg   [23:0] tmp_25_reg_2385;
wire    ap_CS_fsm_state72;
reg   [31:0] j_reg_310;
reg   [1:0] k_1_reg_322;
reg   [31:0] j1_reg_333;
wire    ap_CS_fsm_state10;
reg   [31:0] j_s_reg_343;
reg   [2:0] k_1_1_reg_355;
reg   [31:0] j1_1_reg_366;
wire    ap_CS_fsm_state19;
reg   [31:0] j_2_reg_376;
reg   [3:0] k_1_2_reg_388;
reg   [31:0] j1_2_reg_399;
wire    ap_CS_fsm_state28;
reg   [31:0] j_3_reg_409;
reg   [4:0] k_1_3_reg_421;
reg   [31:0] j1_3_reg_432;
wire    ap_CS_fsm_state37;
reg   [31:0] j_4_reg_442;
reg   [5:0] k_1_4_reg_454;
reg   [31:0] j1_4_reg_465;
wire    ap_CS_fsm_state46;
reg   [31:0] j_5_reg_475;
reg   [6:0] k_1_5_reg_487;
reg   [31:0] j1_5_reg_498;
wire    ap_CS_fsm_state55;
reg   [31:0] j_6_reg_508;
reg   [7:0] k_1_6_reg_520;
reg   [31:0] j1_6_reg_531;
wire    ap_CS_fsm_state64;
reg   [8:0] j_7_reg_541;
reg   [31:0] k_1_7_reg_553;
reg   [8:0] j1_7_reg_564;
wire    ap_CS_fsm_state73;
wire   [63:0] tmp_3_fu_591_p1;
wire   [63:0] tmp_s_fu_631_p1;
wire   [63:0] tmp_6_fu_636_p1;
wire   [63:0] tmp_3_1_fu_739_p1;
wire   [63:0] tmp_1_7_fu_779_p1;
wire   [63:0] tmp_10_1_fu_784_p1;
wire   [63:0] tmp_3_2_fu_887_p1;
wire   [63:0] tmp_2_10_fu_927_p1;
wire   [63:0] tmp_10_2_fu_932_p1;
wire   [63:0] tmp_3_3_fu_1035_p1;
wire   [63:0] tmp_3_13_fu_1075_p1;
wire   [63:0] tmp_10_3_fu_1080_p1;
wire   [63:0] tmp_3_4_fu_1183_p1;
wire   [63:0] tmp_4_16_fu_1223_p1;
wire   [63:0] tmp_10_4_fu_1228_p1;
wire   [63:0] tmp_3_5_fu_1331_p1;
wire   [63:0] tmp_5_19_fu_1371_p1;
wire   [63:0] tmp_10_5_fu_1376_p1;
wire   [63:0] tmp_3_6_fu_1479_p1;
wire   [63:0] tmp_6_22_fu_1519_p1;
wire   [63:0] tmp_10_6_fu_1524_p1;
wire   [63:0] tmp_3_7_fu_1629_p1;
wire   [63:0] tmp_7_24_fu_1669_p1;
wire   [63:0] tmp_10_7_fu_1674_p1;
wire   [31:0] tmp_10_fu_713_p2;
wire   [31:0] tmp_11_fu_720_p2;
wire   [31:0] tmp_12_1_fu_861_p2;
wire   [31:0] tmp_13_1_fu_868_p2;
wire   [31:0] tmp_12_2_fu_1009_p2;
wire   [31:0] tmp_13_2_fu_1016_p2;
wire   [31:0] tmp_12_3_fu_1157_p2;
wire   [31:0] tmp_13_3_fu_1164_p2;
wire   [31:0] tmp_12_4_fu_1305_p2;
wire   [31:0] tmp_13_4_fu_1312_p2;
wire   [31:0] tmp_12_5_fu_1453_p2;
wire   [31:0] tmp_13_5_fu_1460_p2;
wire   [31:0] tmp_12_6_fu_1601_p2;
wire   [31:0] tmp_13_6_fu_1608_p2;
wire   [31:0] tmp_12_7_fu_1745_p2;
wire   [31:0] tmp_13_7_fu_1752_p2;
wire   [0:0] tmp_5_fu_602_p2;
wire   [31:0] tmp_9_fu_625_p2;
wire   [22:0] temp_1_fu_656_p0;
wire   [31:0] temp_1_fu_656_p1;
wire   [31:0] t_1_fu_673_p1;
wire   [55:0] a_assign_cast1_fu_679_p1;
wire   [55:0] t_1_cast_fu_682_p1;
wire   [55:0] t_2_fu_685_p2;
wire   [23:0] tmp_7_fu_704_p2;
wire   [31:0] tmp_11_cast_fu_709_p1;
wire   [31:0] tmp_i_fu_701_p1;
wire   [0:0] tmp_5_1_fu_750_p2;
wire   [31:0] tmp_9_1_fu_773_p2;
wire   [22:0] temp_fu_804_p0;
wire   [31:0] temp_fu_804_p1;
wire   [31:0] t_4_fu_821_p1;
wire   [55:0] a_assign_1_cast1_fu_827_p1;
wire   [55:0] t_5_cast_fu_830_p1;
wire   [55:0] t_5_fu_833_p2;
wire   [23:0] tmp_11_1_fu_852_p2;
wire   [31:0] tmp_11_1_cast_fu_857_p1;
wire   [31:0] tmp_i1_fu_849_p1;
wire   [0:0] tmp_5_2_fu_898_p2;
wire   [31:0] tmp_9_2_fu_921_p2;
wire   [22:0] temp_3_fu_952_p0;
wire   [31:0] temp_3_fu_952_p1;
wire   [31:0] t_7_fu_969_p1;
wire   [55:0] a_assign_2_cast1_fu_975_p1;
wire   [55:0] t_9_cast_fu_978_p1;
wire   [55:0] t_8_fu_981_p2;
wire   [23:0] tmp_11_2_fu_1000_p2;
wire   [31:0] tmp_11_2_cast_fu_1005_p1;
wire   [31:0] tmp_i2_fu_997_p1;
wire   [0:0] tmp_5_3_fu_1046_p2;
wire   [31:0] tmp_9_3_fu_1069_p2;
wire   [22:0] temp_5_fu_1100_p0;
wire   [31:0] temp_5_fu_1100_p1;
wire   [31:0] t_10_fu_1117_p1;
wire   [55:0] a_assign_3_cast8_fu_1123_p1;
wire   [55:0] t_13_cast_fu_1126_p1;
wire   [55:0] t_11_fu_1129_p2;
wire   [23:0] tmp_11_3_fu_1148_p2;
wire   [31:0] tmp_11_3_cast_fu_1153_p1;
wire   [31:0] tmp_i3_fu_1145_p1;
wire   [0:0] tmp_5_4_fu_1194_p2;
wire   [31:0] tmp_9_4_fu_1217_p2;
wire   [22:0] temp_7_fu_1248_p0;
wire   [31:0] temp_7_fu_1248_p1;
wire   [31:0] t_13_fu_1265_p1;
wire   [55:0] a_assign_4_cast6_fu_1271_p1;
wire   [55:0] t_17_cast_fu_1274_p1;
wire   [55:0] t_14_fu_1277_p2;
wire   [23:0] tmp_11_4_fu_1296_p2;
wire   [31:0] tmp_11_4_cast_fu_1301_p1;
wire   [31:0] tmp_i4_fu_1293_p1;
wire   [0:0] tmp_5_5_fu_1342_p2;
wire   [31:0] tmp_9_5_fu_1365_p2;
wire   [22:0] temp_9_fu_1396_p0;
wire   [31:0] temp_9_fu_1396_p1;
wire   [31:0] t_16_fu_1413_p1;
wire   [55:0] a_assign_5_cast4_fu_1419_p1;
wire   [55:0] t_21_cast_fu_1422_p1;
wire   [55:0] t_17_fu_1425_p2;
wire   [23:0] tmp_11_5_fu_1444_p2;
wire   [31:0] tmp_11_5_cast_fu_1449_p1;
wire   [31:0] tmp_i5_fu_1441_p1;
wire   [0:0] tmp_5_6_fu_1490_p2;
wire   [31:0] tmp_9_6_fu_1513_p2;
wire   [22:0] temp_14_fu_1544_p0;
wire   [31:0] temp_14_fu_1544_p1;
wire   [31:0] t_19_fu_1561_p1;
wire   [55:0] a_assign_6_cast2_fu_1567_p1;
wire   [55:0] t_25_cast_fu_1570_p1;
wire   [55:0] t_20_fu_1573_p2;
wire   [23:0] tmp_11_6_fu_1592_p2;
wire   [31:0] tmp_11_6_cast_fu_1597_p1;
wire   [31:0] tmp_i6_fu_1589_p1;
wire   [0:0] tmp_5_7_fu_1640_p2;
wire   [22:0] temp_16_fu_1688_p0;
wire   [31:0] temp_16_fu_1688_p1;
wire   [31:0] t_22_fu_1705_p1;
wire   [55:0] a_assign_7_cast1_fu_1711_p1;
wire   [55:0] t_29_cast_fu_1714_p1;
wire   [55:0] t_23_fu_1717_p2;
wire   [23:0] tmp_11_7_fu_1736_p2;
wire   [31:0] tmp_11_7_cast_fu_1741_p1;
wire   [31:0] tmp_i7_fu_1733_p1;
reg   [72:0] ap_NS_fsm;
wire   [54:0] t_10_fu_1117_p10;
wire   [54:0] t_13_fu_1265_p10;
wire   [54:0] t_16_fu_1413_p10;
wire   [54:0] t_19_fu_1561_p10;
wire   [54:0] t_1_fu_673_p10;
wire   [54:0] t_22_fu_1705_p10;
wire   [54:0] t_4_fu_821_p10;
wire   [54:0] t_7_fu_969_p10;
wire   [54:0] temp_14_fu_1544_p10;
wire   [54:0] temp_16_fu_1688_p10;
wire   [54:0] temp_1_fu_656_p10;
wire   [54:0] temp_3_fu_952_p10;
wire   [54:0] temp_5_fu_1100_p10;
wire   [54:0] temp_7_fu_1248_p10;
wire   [54:0] temp_9_fu_1396_p10;
wire   [54:0] temp_fu_804_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 73'd1;
end

ntt_zetas #(
    .DataWidth( 23 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
zetas_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(zetas_address0),
    .ce0(zetas_ce0),
    .q0(zetas_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j1_1_reg_366 <= j_1_1_reg_1881;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        j1_1_reg_366 <= j_s_reg_343;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        j1_2_reg_399 <= j_1_2_reg_1960;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        j1_2_reg_399 <= j_2_reg_376;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        j1_3_reg_432 <= j_1_3_reg_2039;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        j1_3_reg_432 <= j_3_reg_409;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        j1_4_reg_465 <= j_1_4_reg_2118;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        j1_4_reg_465 <= j_4_reg_442;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        j1_5_reg_498 <= j_1_5_reg_2197;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        j1_5_reg_498 <= j_5_reg_475;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        j1_6_reg_531 <= j_1_6_reg_2276;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        j1_6_reg_531 <= j_6_reg_508;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        j1_7_reg_564 <= tmp_9_7_reg_2343;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        j1_7_reg_564 <= j_7_reg_541;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j1_reg_333 <= j_1_reg_1802;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j1_reg_333 <= j_reg_310;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (tmp_8_2_fu_916_p2 == 1'd0))) begin
        j_2_reg_376 <= tmp_14_2_fu_943_p2;
    end else if (((1'b1 == ap_CS_fsm_state11) & (exitcond2_fu_727_p2 == 1'd1))) begin
        j_2_reg_376 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (tmp_8_3_fu_1064_p2 == 1'd0))) begin
        j_3_reg_409 <= tmp_14_3_fu_1091_p2;
    end else if (((1'b1 == ap_CS_fsm_state20) & (exitcond3_fu_875_p2 == 1'd1))) begin
        j_3_reg_409 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_8_4_fu_1212_p2 == 1'd0))) begin
        j_4_reg_442 <= tmp_14_4_fu_1239_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (exitcond4_fu_1023_p2 == 1'd1))) begin
        j_4_reg_442 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (tmp_8_5_fu_1360_p2 == 1'd0))) begin
        j_5_reg_475 <= tmp_14_5_fu_1387_p2;
    end else if (((1'b1 == ap_CS_fsm_state38) & (exitcond5_fu_1171_p2 == 1'd1))) begin
        j_5_reg_475 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) & (tmp_8_6_fu_1508_p2 == 1'd0))) begin
        j_6_reg_508 <= tmp_14_6_fu_1535_p2;
    end else if (((1'b1 == ap_CS_fsm_state47) & (exitcond6_fu_1319_p2 == 1'd1))) begin
        j_6_reg_508 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) & (tmp_8_7_fu_1658_p2 == 1'd0))) begin
        j_7_reg_541 <= tmp_14_7_fu_1679_p2;
    end else if (((1'b1 == ap_CS_fsm_state56) & (exitcond_fu_1467_p2 == 1'd1))) begin
        j_7_reg_541 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_8_fu_620_p2 == 1'd0))) begin
        j_reg_310 <= tmp_12_fu_647_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_310 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (tmp_8_1_fu_768_p2 == 1'd0))) begin
        j_s_reg_343 <= tmp_14_1_fu_795_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_579_p2 == 1'd1))) begin
        j_s_reg_343 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (tmp_8_1_fu_768_p2 == 1'd0))) begin
        k_1_1_reg_355 <= k_2_1_reg_1841;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_579_p2 == 1'd1))) begin
        k_1_1_reg_355 <= 3'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (tmp_8_2_fu_916_p2 == 1'd0))) begin
        k_1_2_reg_388 <= k_2_2_reg_1920;
    end else if (((1'b1 == ap_CS_fsm_state11) & (exitcond2_fu_727_p2 == 1'd1))) begin
        k_1_2_reg_388 <= 4'd4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (tmp_8_3_fu_1064_p2 == 1'd0))) begin
        k_1_3_reg_421 <= k_2_3_reg_1999;
    end else if (((1'b1 == ap_CS_fsm_state20) & (exitcond3_fu_875_p2 == 1'd1))) begin
        k_1_3_reg_421 <= 5'd8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_8_4_fu_1212_p2 == 1'd0))) begin
        k_1_4_reg_454 <= k_2_4_reg_2078;
    end else if (((1'b1 == ap_CS_fsm_state29) & (exitcond4_fu_1023_p2 == 1'd1))) begin
        k_1_4_reg_454 <= 6'd16;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (tmp_8_5_fu_1360_p2 == 1'd0))) begin
        k_1_5_reg_487 <= k_2_5_reg_2157;
    end else if (((1'b1 == ap_CS_fsm_state38) & (exitcond5_fu_1171_p2 == 1'd1))) begin
        k_1_5_reg_487 <= 7'd32;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) & (tmp_8_6_fu_1508_p2 == 1'd0))) begin
        k_1_6_reg_520 <= k_2_6_reg_2236;
    end else if (((1'b1 == ap_CS_fsm_state47) & (exitcond6_fu_1319_p2 == 1'd1))) begin
        k_1_6_reg_520 <= 8'd64;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) & (tmp_8_7_fu_1658_p2 == 1'd0))) begin
        k_1_7_reg_553 <= k_2_7_reg_2315;
    end else if (((1'b1 == ap_CS_fsm_state56) & (exitcond_fu_1467_p2 == 1'd1))) begin
        k_1_7_reg_553 <= 32'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_8_fu_620_p2 == 1'd0))) begin
        k_1_reg_322 <= k_2_reg_1762;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        k_1_reg_322 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_574 <= p_q1;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_574 <= p_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (tmp_8_1_fu_768_p2 == 1'd1))) begin
        j_1_1_reg_1881 <= j_1_1_fu_789_p2;
        p_addr_2_reg_1869 <= tmp_1_7_fu_779_p1;
        p_addr_3_reg_1875 <= tmp_10_1_fu_784_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (tmp_8_2_fu_916_p2 == 1'd1))) begin
        j_1_2_reg_1960 <= j_1_2_fu_937_p2;
        p_addr_4_reg_1948 <= tmp_2_10_fu_927_p1;
        p_addr_5_reg_1954 <= tmp_10_2_fu_932_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (tmp_8_3_fu_1064_p2 == 1'd1))) begin
        j_1_3_reg_2039 <= j_1_3_fu_1085_p2;
        p_addr_6_reg_2027 <= tmp_3_13_fu_1075_p1;
        p_addr_7_reg_2033 <= tmp_10_3_fu_1080_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_8_4_fu_1212_p2 == 1'd1))) begin
        j_1_4_reg_2118 <= j_1_4_fu_1233_p2;
        p_addr_8_reg_2106 <= tmp_4_16_fu_1223_p1;
        p_addr_9_reg_2112 <= tmp_10_4_fu_1228_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (tmp_8_5_fu_1360_p2 == 1'd1))) begin
        j_1_5_reg_2197 <= j_1_5_fu_1381_p2;
        p_addr_10_reg_2185 <= tmp_5_19_fu_1371_p1;
        p_addr_11_reg_2191 <= tmp_10_5_fu_1376_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) & (tmp_8_6_fu_1508_p2 == 1'd1))) begin
        j_1_6_reg_2276 <= j_1_6_fu_1529_p2;
        p_addr_12_reg_2264 <= tmp_6_22_fu_1519_p1;
        p_addr_13_reg_2270 <= tmp_10_6_fu_1524_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_8_fu_620_p2 == 1'd1))) begin
        j_1_reg_1802 <= j_1_fu_641_p2;
        p_addr_1_reg_1796 <= tmp_6_fu_636_p1;
        p_addr_reg_1790 <= tmp_s_fu_631_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond2_fu_727_p2 == 1'd0))) begin
        k_2_1_reg_1841 <= k_2_1_fu_733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond3_fu_875_p2 == 1'd0))) begin
        k_2_2_reg_1920 <= k_2_2_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (exitcond4_fu_1023_p2 == 1'd0))) begin
        k_2_3_reg_1999 <= k_2_3_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (exitcond5_fu_1171_p2 == 1'd0))) begin
        k_2_4_reg_2078 <= k_2_4_fu_1177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) & (exitcond6_fu_1319_p2 == 1'd0))) begin
        k_2_5_reg_2157 <= k_2_5_fu_1325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) & (exitcond_fu_1467_p2 == 1'd0))) begin
        k_2_6_reg_2236 <= k_2_6_fu_1473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state65) & (tmp_32_fu_1615_p3 == 1'd0))) begin
        k_2_7_reg_2315 <= k_2_7_fu_1623_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_579_p2 == 1'd0))) begin
        k_2_reg_1762 <= k_2_fu_585_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) & (tmp_8_7_fu_1658_p2 == 1'd1))) begin
        p_addr_14_reg_2348 <= tmp_7_24_fu_1669_p1;
        p_addr_15_reg_2354 <= tmp_10_7_fu_1674_p1;
        tmp_9_7_reg_2343 <= tmp_9_7_fu_1663_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        start_1_reg_1856 <= start_1_fu_756_p3;
        tmp_4_1_reg_1851 <= tmp_4_1_fu_744_p2;
        tmp_6_1_cast_reg_1861[22 : 0] <= tmp_6_1_cast_fu_764_p1[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        start_2_reg_1935 <= start_2_fu_904_p3;
        tmp_4_2_reg_1930 <= tmp_4_2_fu_892_p2;
        tmp_6_2_cast_reg_1940[22 : 0] <= tmp_6_2_cast_fu_912_p1[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        start_3_reg_2014 <= start_3_fu_1052_p3;
        tmp_4_3_reg_2009 <= tmp_4_3_fu_1040_p2;
        tmp_6_3_cast_reg_2019[22 : 0] <= tmp_6_3_cast_fu_1060_p1[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        start_4_reg_2093 <= start_4_fu_1200_p3;
        tmp_4_4_reg_2088 <= tmp_4_4_fu_1188_p2;
        tmp_6_4_cast_reg_2098[22 : 0] <= tmp_6_4_cast_fu_1208_p1[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        start_5_reg_2172 <= start_5_fu_1348_p3;
        tmp_4_5_reg_2167 <= tmp_4_5_fu_1336_p2;
        tmp_6_5_cast_reg_2177[22 : 0] <= tmp_6_5_cast_fu_1356_p1[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        start_6_reg_2251 <= start_6_fu_1496_p3;
        tmp_4_6_reg_2246 <= tmp_4_6_fu_1484_p2;
        tmp_6_6_cast_reg_2256[22 : 0] <= tmp_6_6_cast_fu_1504_p1[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        start_7_reg_2330 <= start_7_fu_1646_p3;
        tmp_4_7_reg_2325 <= tmp_4_7_fu_1634_p2;
        tmp_6_7_cast_reg_2335[22 : 0] <= tmp_6_7_cast_fu_1654_p1[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        start_reg_1777 <= start_fu_608_p3;
        tmp_4_reg_1772 <= tmp_4_fu_596_p2;
        tmp_6_cast_reg_1782[22 : 0] <= tmp_6_cast_fu_616_p1[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        t_10_reg_2064 <= t_10_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        t_13_reg_2143 <= t_13_fu_1265_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        t_16_reg_2222 <= t_16_fu_1413_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        t_19_reg_2301 <= t_19_fu_1561_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        t_1_reg_1827 <= t_1_fu_673_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        t_22_reg_2380 <= t_22_fu_1705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        t_4_reg_1906 <= t_4_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        t_7_reg_1985 <= t_7_fu_969_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        temp_14_reg_2286 <= temp_14_fu_1544_p2;
        tmp_33_reg_2291 <= tmp_33_fu_1549_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        temp_16_reg_2365 <= temp_16_fu_1688_p2;
        tmp_34_reg_2370 <= tmp_34_fu_1693_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_18_reg_1822 <= temp_18_fu_665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_19_reg_1901 <= temp_19_fu_813_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_1_reg_1812 <= temp_1_fu_656_p2;
        tmp_26_reg_1817 <= tmp_26_fu_661_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_20_reg_1980 <= temp_20_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        temp_21_reg_2059 <= temp_21_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        temp_22_reg_2138 <= temp_22_fu_1257_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        temp_23_reg_2217 <= temp_23_fu_1405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        temp_24_reg_2296 <= temp_24_fu_1553_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        temp_25_reg_2375 <= temp_25_fu_1697_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        temp_3_reg_1970 <= temp_3_fu_952_p2;
        tmp_28_reg_1975 <= tmp_28_fu_957_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        temp_5_reg_2049 <= temp_5_fu_1100_p2;
        tmp_29_reg_2054 <= tmp_29_fu_1105_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        temp_7_reg_2128 <= temp_7_fu_1248_p2;
        tmp_30_reg_2133 <= tmp_30_fu_1253_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        temp_9_reg_2207 <= temp_9_fu_1396_p2;
        tmp_31_reg_2212 <= tmp_31_fu_1401_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        temp_reg_1891 <= temp_fu_804_p2;
        tmp_27_reg_1896 <= tmp_27_fu_809_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_18_reg_1832 <= {{t_2_fu_685_p2[55:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_19_reg_1911 <= {{t_5_fu_833_p2[55:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp_20_reg_1990 <= {{t_8_fu_981_p2[55:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_21_reg_2069 <= {{t_11_fu_1129_p2[55:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_22_reg_2148 <= {{t_14_fu_1277_p2[55:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        tmp_23_reg_2227 <= {{t_17_fu_1425_p2[55:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        tmp_24_reg_2306 <= {{t_20_fu_1573_p2[55:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        tmp_25_reg_2385 <= {{t_23_fu_1717_p2[55:32]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) & (tmp_32_fu_1615_p3 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) & (tmp_32_fu_1615_p3 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        p_address0 = p_addr_14_reg_2348;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        p_address0 = p_addr_15_reg_2354;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63))) begin
        p_address0 = p_addr_13_reg_2270;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        p_address0 = tmp_6_22_fu_1519_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        p_address0 = p_addr_10_reg_2185;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        p_address0 = p_addr_11_reg_2191;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        p_address0 = p_addr_9_reg_2112;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        p_address0 = tmp_4_16_fu_1223_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        p_address0 = p_addr_6_reg_2027;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        p_address0 = p_addr_7_reg_2033;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        p_address0 = p_addr_5_reg_1954;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        p_address0 = tmp_2_10_fu_927_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_address0 = p_addr_2_reg_1869;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        p_address0 = p_addr_3_reg_1875;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        p_address0 = p_addr_1_reg_1796;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_address0 = tmp_s_fu_631_p1;
    end else begin
        p_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72))) begin
        p_address1 = p_addr_15_reg_2354;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        p_address1 = tmp_7_24_fu_1669_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        p_address1 = p_addr_12_reg_2264;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        p_address1 = p_addr_13_reg_2270;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54))) begin
        p_address1 = p_addr_11_reg_2191;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        p_address1 = tmp_5_19_fu_1371_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        p_address1 = p_addr_8_reg_2106;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        p_address1 = p_addr_9_reg_2112;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        p_address1 = p_addr_7_reg_2033;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        p_address1 = tmp_3_13_fu_1075_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        p_address1 = p_addr_4_reg_1948;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        p_address1 = p_addr_5_reg_1954;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        p_address1 = p_addr_3_reg_1875;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p_address1 = tmp_1_7_fu_779_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_address1 = p_addr_reg_1790;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        p_address1 = p_addr_1_reg_1796;
    end else begin
        p_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state4))) begin
        p_ce0 = 1'b1;
    end else begin
        p_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        p_ce1 = 1'b1;
    end else begin
        p_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        p_d0 = tmp_12_7_fu_1745_p2;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        p_d0 = tmp_13_6_fu_1608_p2;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        p_d0 = tmp_12_5_fu_1453_p2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        p_d0 = tmp_13_4_fu_1312_p2;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        p_d0 = tmp_12_3_fu_1157_p2;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        p_d0 = tmp_13_2_fu_1016_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_d0 = tmp_12_1_fu_861_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_d0 = tmp_11_fu_720_p2;
    end else begin
        p_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        p_d1 = tmp_13_7_fu_1752_p2;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        p_d1 = tmp_12_6_fu_1601_p2;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        p_d1 = tmp_13_5_fu_1460_p2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        p_d1 = tmp_12_4_fu_1305_p2;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        p_d1 = tmp_13_3_fu_1164_p2;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        p_d1 = tmp_12_2_fu_1009_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_d1 = tmp_13_1_fu_868_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_d1 = tmp_10_fu_713_p2;
    end else begin
        p_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        p_we0 = 1'b1;
    end else begin
        p_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        p_we1 = 1'b1;
    end else begin
        p_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        zetas_address0 = tmp_3_7_fu_1629_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        zetas_address0 = tmp_3_6_fu_1479_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        zetas_address0 = tmp_3_5_fu_1331_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        zetas_address0 = tmp_3_4_fu_1183_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        zetas_address0 = tmp_3_3_fu_1035_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        zetas_address0 = tmp_3_2_fu_887_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        zetas_address0 = tmp_3_1_fu_739_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        zetas_address0 = tmp_3_fu_591_p1;
    end else begin
        zetas_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        zetas_ce0 = 1'b1;
    end else begin
        zetas_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_579_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_8_fu_620_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (exitcond2_fu_727_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (tmp_8_1_fu_768_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (exitcond3_fu_875_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (tmp_8_2_fu_916_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (exitcond4_fu_1023_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (tmp_8_3_fu_1064_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (exitcond5_fu_1171_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (tmp_8_4_fu_1212_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (exitcond6_fu_1319_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (tmp_8_5_fu_1360_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state56 : begin
            if (((1'b1 == ap_CS_fsm_state56) & (exitcond_fu_1467_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & (tmp_8_6_fu_1508_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state65 : begin
            if (((1'b1 == ap_CS_fsm_state65) & (tmp_32_fu_1615_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (tmp_8_7_fu_1658_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_assign_1_cast1_fu_827_p1 = temp_reg_1891;

assign a_assign_2_cast1_fu_975_p1 = temp_3_reg_1970;

assign a_assign_3_cast8_fu_1123_p1 = temp_5_reg_2049;

assign a_assign_4_cast6_fu_1271_p1 = temp_7_reg_2128;

assign a_assign_5_cast4_fu_1419_p1 = temp_9_reg_2207;

assign a_assign_6_cast2_fu_1567_p1 = temp_14_reg_2286;

assign a_assign_7_cast1_fu_1711_p1 = temp_16_reg_2365;

assign a_assign_cast1_fu_679_p1 = temp_1_reg_1812;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond1_fu_579_p2 = ((k_1_reg_322 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond2_fu_727_p2 = ((k_1_1_reg_355 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond3_fu_875_p2 = ((k_1_2_reg_388 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond4_fu_1023_p2 = ((k_1_3_reg_421 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond5_fu_1171_p2 = ((k_1_4_reg_454 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond6_fu_1319_p2 = ((k_1_5_reg_487 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_fu_1467_p2 = ((k_1_6_reg_520 == 8'd128) ? 1'b1 : 1'b0);

assign j_1_1_fu_789_p2 = (32'd1 + j1_1_reg_366);

assign j_1_2_fu_937_p2 = (32'd1 + j1_2_reg_399);

assign j_1_3_fu_1085_p2 = (32'd1 + j1_3_reg_432);

assign j_1_4_fu_1233_p2 = (32'd1 + j1_4_reg_465);

assign j_1_5_fu_1381_p2 = (32'd1 + j1_5_reg_498);

assign j_1_6_fu_1529_p2 = (32'd1 + j1_6_reg_531);

assign j_1_fu_641_p2 = (32'd1 + j1_reg_333);

assign k_2_1_fu_733_p2 = (k_1_1_reg_355 + 3'd1);

assign k_2_2_fu_881_p2 = (k_1_2_reg_388 + 4'd1);

assign k_2_3_fu_1029_p2 = (k_1_3_reg_421 + 5'd1);

assign k_2_4_fu_1177_p2 = (k_1_4_reg_454 + 6'd1);

assign k_2_5_fu_1325_p2 = (k_1_5_reg_487 + 7'd1);

assign k_2_6_fu_1473_p2 = (k_1_6_reg_520 + 8'd1);

assign k_2_7_fu_1623_p2 = (k_1_7_reg_553 + 32'd1);

assign k_2_fu_585_p2 = (k_1_reg_322 + 2'd1);

assign start_1_fu_756_p3 = ((tmp_5_1_fu_750_p2[0:0] === 1'b1) ? j_s_reg_343 : tmp_4_1_fu_744_p2);

assign start_2_fu_904_p3 = ((tmp_5_2_fu_898_p2[0:0] === 1'b1) ? j_2_reg_376 : tmp_4_2_fu_892_p2);

assign start_3_fu_1052_p3 = ((tmp_5_3_fu_1046_p2[0:0] === 1'b1) ? j_3_reg_409 : tmp_4_3_fu_1040_p2);

assign start_4_fu_1200_p3 = ((tmp_5_4_fu_1194_p2[0:0] === 1'b1) ? j_4_reg_442 : tmp_4_4_fu_1188_p2);

assign start_5_fu_1348_p3 = ((tmp_5_5_fu_1342_p2[0:0] === 1'b1) ? j_5_reg_475 : tmp_4_5_fu_1336_p2);

assign start_6_fu_1496_p3 = ((tmp_5_6_fu_1490_p2[0:0] === 1'b1) ? j_6_reg_508 : tmp_4_6_fu_1484_p2);

assign start_7_fu_1646_p3 = ((tmp_5_7_fu_1640_p2[0:0] === 1'b1) ? j_7_reg_541 : tmp_4_7_fu_1634_p2);

assign start_fu_608_p3 = ((tmp_5_fu_602_p2[0:0] === 1'b1) ? j_reg_310 : tmp_4_fu_596_p2);

assign t_10_fu_1117_p1 = t_10_fu_1117_p10;

assign t_10_fu_1117_p10 = temp_21_reg_2059;

assign t_10_fu_1117_p2 = (55'd8380417 * t_10_fu_1117_p1);

assign t_11_fu_1129_p2 = (a_assign_3_cast8_fu_1123_p1 + t_13_cast_fu_1126_p1);

assign t_13_cast_fu_1126_p1 = t_10_reg_2064;

assign t_13_fu_1265_p1 = t_13_fu_1265_p10;

assign t_13_fu_1265_p10 = temp_22_reg_2138;

assign t_13_fu_1265_p2 = (55'd8380417 * t_13_fu_1265_p1);

assign t_14_fu_1277_p2 = (a_assign_4_cast6_fu_1271_p1 + t_17_cast_fu_1274_p1);

assign t_16_fu_1413_p1 = t_16_fu_1413_p10;

assign t_16_fu_1413_p10 = temp_23_reg_2217;

assign t_16_fu_1413_p2 = (55'd8380417 * t_16_fu_1413_p1);

assign t_17_cast_fu_1274_p1 = t_13_reg_2143;

assign t_17_fu_1425_p2 = (a_assign_5_cast4_fu_1419_p1 + t_21_cast_fu_1422_p1);

assign t_19_fu_1561_p1 = t_19_fu_1561_p10;

assign t_19_fu_1561_p10 = temp_24_reg_2296;

assign t_19_fu_1561_p2 = (55'd8380417 * t_19_fu_1561_p1);

assign t_1_cast_fu_682_p1 = t_1_reg_1827;

assign t_1_fu_673_p1 = t_1_fu_673_p10;

assign t_1_fu_673_p10 = temp_18_reg_1822;

assign t_1_fu_673_p2 = (55'd8380417 * t_1_fu_673_p1);

assign t_20_fu_1573_p2 = (a_assign_6_cast2_fu_1567_p1 + t_25_cast_fu_1570_p1);

assign t_21_cast_fu_1422_p1 = t_16_reg_2222;

assign t_22_fu_1705_p1 = t_22_fu_1705_p10;

assign t_22_fu_1705_p10 = temp_25_reg_2375;

assign t_22_fu_1705_p2 = (55'd8380417 * t_22_fu_1705_p1);

assign t_23_fu_1717_p2 = (a_assign_7_cast1_fu_1711_p1 + t_29_cast_fu_1714_p1);

assign t_25_cast_fu_1570_p1 = t_19_reg_2301;

assign t_29_cast_fu_1714_p1 = t_22_reg_2380;

assign t_2_fu_685_p2 = (a_assign_cast1_fu_679_p1 + t_1_cast_fu_682_p1);

assign t_4_fu_821_p1 = t_4_fu_821_p10;

assign t_4_fu_821_p10 = temp_19_reg_1901;

assign t_4_fu_821_p2 = (55'd8380417 * t_4_fu_821_p1);

assign t_5_cast_fu_830_p1 = t_4_reg_1906;

assign t_5_fu_833_p2 = (a_assign_1_cast1_fu_827_p1 + t_5_cast_fu_830_p1);

assign t_7_fu_969_p1 = t_7_fu_969_p10;

assign t_7_fu_969_p10 = temp_20_reg_1980;

assign t_7_fu_969_p2 = (55'd8380417 * t_7_fu_969_p1);

assign t_8_fu_981_p2 = (a_assign_2_cast1_fu_975_p1 + t_9_cast_fu_978_p1);

assign t_9_cast_fu_978_p1 = t_7_reg_1985;

assign temp_14_fu_1544_p0 = tmp_6_6_cast_reg_2256;

assign temp_14_fu_1544_p1 = temp_14_fu_1544_p10;

assign temp_14_fu_1544_p10 = reg_574;

assign temp_14_fu_1544_p2 = (temp_14_fu_1544_p0 * temp_14_fu_1544_p1);

assign temp_16_fu_1688_p0 = tmp_6_7_cast_reg_2335;

assign temp_16_fu_1688_p1 = temp_16_fu_1688_p10;

assign temp_16_fu_1688_p10 = reg_574;

assign temp_16_fu_1688_p2 = (temp_16_fu_1688_p0 * temp_16_fu_1688_p1);

assign temp_18_fu_665_p2 = ($signed(32'd4236238847) * $signed(tmp_26_reg_1817));

assign temp_19_fu_813_p2 = ($signed(32'd4236238847) * $signed(tmp_27_reg_1896));

assign temp_1_fu_656_p0 = tmp_6_cast_reg_1782;

assign temp_1_fu_656_p1 = temp_1_fu_656_p10;

assign temp_1_fu_656_p10 = reg_574;

assign temp_1_fu_656_p2 = (temp_1_fu_656_p0 * temp_1_fu_656_p1);

assign temp_20_fu_961_p2 = ($signed(32'd4236238847) * $signed(tmp_28_reg_1975));

assign temp_21_fu_1109_p2 = ($signed(32'd4236238847) * $signed(tmp_29_reg_2054));

assign temp_22_fu_1257_p2 = ($signed(32'd4236238847) * $signed(tmp_30_reg_2133));

assign temp_23_fu_1405_p2 = ($signed(32'd4236238847) * $signed(tmp_31_reg_2212));

assign temp_24_fu_1553_p2 = ($signed(32'd4236238847) * $signed(tmp_33_reg_2291));

assign temp_25_fu_1697_p2 = ($signed(32'd4236238847) * $signed(tmp_34_reg_2370));

assign temp_3_fu_952_p0 = tmp_6_2_cast_reg_1940;

assign temp_3_fu_952_p1 = temp_3_fu_952_p10;

assign temp_3_fu_952_p10 = reg_574;

assign temp_3_fu_952_p2 = (temp_3_fu_952_p0 * temp_3_fu_952_p1);

assign temp_5_fu_1100_p0 = tmp_6_3_cast_reg_2019;

assign temp_5_fu_1100_p1 = temp_5_fu_1100_p10;

assign temp_5_fu_1100_p10 = reg_574;

assign temp_5_fu_1100_p2 = (temp_5_fu_1100_p0 * temp_5_fu_1100_p1);

assign temp_7_fu_1248_p0 = tmp_6_4_cast_reg_2098;

assign temp_7_fu_1248_p1 = temp_7_fu_1248_p10;

assign temp_7_fu_1248_p10 = reg_574;

assign temp_7_fu_1248_p2 = (temp_7_fu_1248_p0 * temp_7_fu_1248_p1);

assign temp_9_fu_1396_p0 = tmp_6_5_cast_reg_2177;

assign temp_9_fu_1396_p1 = temp_9_fu_1396_p10;

assign temp_9_fu_1396_p10 = reg_574;

assign temp_9_fu_1396_p2 = (temp_9_fu_1396_p0 * temp_9_fu_1396_p1);

assign temp_fu_804_p0 = tmp_6_1_cast_reg_1861;

assign temp_fu_804_p1 = temp_fu_804_p10;

assign temp_fu_804_p10 = reg_574;

assign temp_fu_804_p2 = (temp_fu_804_p0 * temp_fu_804_p1);

assign tmp_10_1_fu_784_p1 = j1_1_reg_366;

assign tmp_10_2_fu_932_p1 = j1_2_reg_399;

assign tmp_10_3_fu_1080_p1 = j1_3_reg_432;

assign tmp_10_4_fu_1228_p1 = j1_4_reg_465;

assign tmp_10_5_fu_1376_p1 = j1_5_reg_498;

assign tmp_10_6_fu_1524_p1 = j1_6_reg_531;

assign tmp_10_7_fu_1674_p1 = j1_7_reg_564;

assign tmp_10_fu_713_p2 = (tmp_11_cast_fu_709_p1 + p_q0);

assign tmp_11_1_cast_fu_857_p1 = tmp_11_1_fu_852_p2;

assign tmp_11_1_fu_852_p2 = ($signed(24'd16760834) - $signed(tmp_19_reg_1911));

assign tmp_11_2_cast_fu_1005_p1 = tmp_11_2_fu_1000_p2;

assign tmp_11_2_fu_1000_p2 = ($signed(24'd16760834) - $signed(tmp_20_reg_1990));

assign tmp_11_3_cast_fu_1153_p1 = tmp_11_3_fu_1148_p2;

assign tmp_11_3_fu_1148_p2 = ($signed(24'd16760834) - $signed(tmp_21_reg_2069));

assign tmp_11_4_cast_fu_1301_p1 = tmp_11_4_fu_1296_p2;

assign tmp_11_4_fu_1296_p2 = ($signed(24'd16760834) - $signed(tmp_22_reg_2148));

assign tmp_11_5_cast_fu_1449_p1 = tmp_11_5_fu_1444_p2;

assign tmp_11_5_fu_1444_p2 = ($signed(24'd16760834) - $signed(tmp_23_reg_2227));

assign tmp_11_6_cast_fu_1597_p1 = tmp_11_6_fu_1592_p2;

assign tmp_11_6_fu_1592_p2 = ($signed(24'd16760834) - $signed(tmp_24_reg_2306));

assign tmp_11_7_cast_fu_1741_p1 = tmp_11_7_fu_1736_p2;

assign tmp_11_7_fu_1736_p2 = ($signed(24'd16760834) - $signed(tmp_25_reg_2385));

assign tmp_11_cast_fu_709_p1 = tmp_7_fu_704_p2;

assign tmp_11_fu_720_p2 = (tmp_i_fu_701_p1 + p_q1);

assign tmp_12_1_fu_861_p2 = (tmp_11_1_cast_fu_857_p1 + p_q0);

assign tmp_12_2_fu_1009_p2 = (tmp_11_2_cast_fu_1005_p1 + p_q1);

assign tmp_12_3_fu_1157_p2 = (tmp_11_3_cast_fu_1153_p1 + p_q0);

assign tmp_12_4_fu_1305_p2 = (tmp_11_4_cast_fu_1301_p1 + p_q1);

assign tmp_12_5_fu_1453_p2 = (tmp_11_5_cast_fu_1449_p1 + p_q0);

assign tmp_12_6_fu_1601_p2 = (tmp_11_6_cast_fu_1597_p1 + p_q1);

assign tmp_12_7_fu_1745_p2 = (tmp_11_7_cast_fu_1741_p1 + p_q0);

assign tmp_12_fu_647_p2 = (start_reg_1777 + 32'd128);

assign tmp_13_1_fu_868_p2 = (tmp_i1_fu_849_p1 + p_q1);

assign tmp_13_2_fu_1016_p2 = (tmp_i2_fu_997_p1 + p_q0);

assign tmp_13_3_fu_1164_p2 = (tmp_i3_fu_1145_p1 + p_q1);

assign tmp_13_4_fu_1312_p2 = (tmp_i4_fu_1293_p1 + p_q0);

assign tmp_13_5_fu_1460_p2 = (tmp_i5_fu_1441_p1 + p_q1);

assign tmp_13_6_fu_1608_p2 = (tmp_i6_fu_1589_p1 + p_q0);

assign tmp_13_7_fu_1752_p2 = (tmp_i7_fu_1733_p1 + p_q1);

assign tmp_14_1_fu_795_p2 = (start_1_reg_1856 + 32'd64);

assign tmp_14_2_fu_943_p2 = (start_2_reg_1935 + 32'd32);

assign tmp_14_3_fu_1091_p2 = (start_3_reg_2014 + 32'd16);

assign tmp_14_4_fu_1239_p2 = (start_4_reg_2093 + 32'd8);

assign tmp_14_5_fu_1387_p2 = (start_5_reg_2172 + 32'd4);

assign tmp_14_6_fu_1535_p2 = (start_6_reg_2251 + 32'd2);

assign tmp_14_7_fu_1679_p2 = (start_7_reg_2330 + 9'd1);

assign tmp_1_7_fu_779_p1 = tmp_9_1_fu_773_p2;

assign tmp_26_fu_661_p1 = temp_1_fu_656_p2[31:0];

assign tmp_27_fu_809_p1 = temp_fu_804_p2[31:0];

assign tmp_28_fu_957_p1 = temp_3_fu_952_p2[31:0];

assign tmp_29_fu_1105_p1 = temp_5_fu_1100_p2[31:0];

assign tmp_2_10_fu_927_p1 = tmp_9_2_fu_921_p2;

assign tmp_30_fu_1253_p1 = temp_7_fu_1248_p2[31:0];

assign tmp_31_fu_1401_p1 = temp_9_fu_1396_p2[31:0];

assign tmp_32_fu_1615_p3 = j_7_reg_541[32'd8];

assign tmp_33_fu_1549_p1 = temp_14_fu_1544_p2[31:0];

assign tmp_34_fu_1693_p1 = temp_16_fu_1688_p2[31:0];

assign tmp_3_13_fu_1075_p1 = tmp_9_3_fu_1069_p2;

assign tmp_3_1_fu_739_p1 = k_1_1_reg_355;

assign tmp_3_2_fu_887_p1 = k_1_2_reg_388;

assign tmp_3_3_fu_1035_p1 = k_1_3_reg_421;

assign tmp_3_4_fu_1183_p1 = k_1_4_reg_454;

assign tmp_3_5_fu_1331_p1 = k_1_5_reg_487;

assign tmp_3_6_fu_1479_p1 = k_1_6_reg_520;

assign tmp_3_7_fu_1629_p1 = k_1_7_reg_553;

assign tmp_3_fu_591_p1 = k_1_reg_322;

assign tmp_4_16_fu_1223_p1 = tmp_9_4_fu_1217_p2;

assign tmp_4_1_fu_744_p2 = (j_s_reg_343 + 32'd64);

assign tmp_4_2_fu_892_p2 = (j_2_reg_376 + 32'd32);

assign tmp_4_3_fu_1040_p2 = (j_3_reg_409 + 32'd16);

assign tmp_4_4_fu_1188_p2 = (j_4_reg_442 + 32'd8);

assign tmp_4_5_fu_1336_p2 = (j_5_reg_475 + 32'd4);

assign tmp_4_6_fu_1484_p2 = (j_6_reg_508 + 32'd2);

assign tmp_4_7_fu_1634_p2 = (j_7_reg_541 + 9'd1);

assign tmp_4_fu_596_p2 = (j_reg_310 + 32'd128);

assign tmp_5_19_fu_1371_p1 = tmp_9_5_fu_1365_p2;

assign tmp_5_1_fu_750_p2 = ((j_s_reg_343 > tmp_4_1_fu_744_p2) ? 1'b1 : 1'b0);

assign tmp_5_2_fu_898_p2 = ((j_2_reg_376 > tmp_4_2_fu_892_p2) ? 1'b1 : 1'b0);

assign tmp_5_3_fu_1046_p2 = ((j_3_reg_409 > tmp_4_3_fu_1040_p2) ? 1'b1 : 1'b0);

assign tmp_5_4_fu_1194_p2 = ((j_4_reg_442 > tmp_4_4_fu_1188_p2) ? 1'b1 : 1'b0);

assign tmp_5_5_fu_1342_p2 = ((j_5_reg_475 > tmp_4_5_fu_1336_p2) ? 1'b1 : 1'b0);

assign tmp_5_6_fu_1490_p2 = ((j_6_reg_508 > tmp_4_6_fu_1484_p2) ? 1'b1 : 1'b0);

assign tmp_5_7_fu_1640_p2 = ((j_7_reg_541 > tmp_4_7_fu_1634_p2) ? 1'b1 : 1'b0);

assign tmp_5_fu_602_p2 = ((j_reg_310 > tmp_4_fu_596_p2) ? 1'b1 : 1'b0);

assign tmp_6_1_cast_fu_764_p1 = zetas_q0;

assign tmp_6_22_fu_1519_p1 = tmp_9_6_fu_1513_p2;

assign tmp_6_2_cast_fu_912_p1 = zetas_q0;

assign tmp_6_3_cast_fu_1060_p1 = zetas_q0;

assign tmp_6_4_cast_fu_1208_p1 = zetas_q0;

assign tmp_6_5_cast_fu_1356_p1 = zetas_q0;

assign tmp_6_6_cast_fu_1504_p1 = zetas_q0;

assign tmp_6_7_cast_fu_1654_p1 = zetas_q0;

assign tmp_6_cast_fu_616_p1 = zetas_q0;

assign tmp_6_fu_636_p1 = j1_reg_333;

assign tmp_7_24_fu_1669_p1 = tmp_9_7_fu_1663_p2;

assign tmp_7_fu_704_p2 = ($signed(24'd16760834) - $signed(tmp_18_reg_1832));

assign tmp_8_1_fu_768_p2 = ((j1_1_reg_366 < tmp_4_1_reg_1851) ? 1'b1 : 1'b0);

assign tmp_8_2_fu_916_p2 = ((j1_2_reg_399 < tmp_4_2_reg_1930) ? 1'b1 : 1'b0);

assign tmp_8_3_fu_1064_p2 = ((j1_3_reg_432 < tmp_4_3_reg_2009) ? 1'b1 : 1'b0);

assign tmp_8_4_fu_1212_p2 = ((j1_4_reg_465 < tmp_4_4_reg_2088) ? 1'b1 : 1'b0);

assign tmp_8_5_fu_1360_p2 = ((j1_5_reg_498 < tmp_4_5_reg_2167) ? 1'b1 : 1'b0);

assign tmp_8_6_fu_1508_p2 = ((j1_6_reg_531 < tmp_4_6_reg_2246) ? 1'b1 : 1'b0);

assign tmp_8_7_fu_1658_p2 = ((j1_7_reg_564 < tmp_4_7_reg_2325) ? 1'b1 : 1'b0);

assign tmp_8_fu_620_p2 = ((j1_reg_333 < tmp_4_reg_1772) ? 1'b1 : 1'b0);

assign tmp_9_1_fu_773_p2 = (32'd64 + j1_1_reg_366);

assign tmp_9_2_fu_921_p2 = (32'd32 + j1_2_reg_399);

assign tmp_9_3_fu_1069_p2 = (32'd16 + j1_3_reg_432);

assign tmp_9_4_fu_1217_p2 = (32'd8 + j1_4_reg_465);

assign tmp_9_5_fu_1365_p2 = (32'd4 + j1_5_reg_498);

assign tmp_9_6_fu_1513_p2 = (32'd2 + j1_6_reg_531);

assign tmp_9_7_fu_1663_p2 = (9'd1 + j1_7_reg_564);

assign tmp_9_fu_625_p2 = (32'd128 + j1_reg_333);

assign tmp_i1_fu_849_p1 = tmp_19_reg_1911;

assign tmp_i2_fu_997_p1 = tmp_20_reg_1990;

assign tmp_i3_fu_1145_p1 = tmp_21_reg_2069;

assign tmp_i4_fu_1293_p1 = tmp_22_reg_2148;

assign tmp_i5_fu_1441_p1 = tmp_23_reg_2227;

assign tmp_i6_fu_1589_p1 = tmp_24_reg_2306;

assign tmp_i7_fu_1733_p1 = tmp_25_reg_2385;

assign tmp_i_fu_701_p1 = tmp_18_reg_1832;

assign tmp_s_fu_631_p1 = tmp_9_fu_625_p2;

always @ (posedge ap_clk) begin
    tmp_6_cast_reg_1782[54:23] <= 32'b00000000000000000000000000000000;
    tmp_6_1_cast_reg_1861[54:23] <= 32'b00000000000000000000000000000000;
    tmp_6_2_cast_reg_1940[54:23] <= 32'b00000000000000000000000000000000;
    tmp_6_3_cast_reg_2019[54:23] <= 32'b00000000000000000000000000000000;
    tmp_6_4_cast_reg_2098[54:23] <= 32'b00000000000000000000000000000000;
    tmp_6_5_cast_reg_2177[54:23] <= 32'b00000000000000000000000000000000;
    tmp_6_6_cast_reg_2256[54:23] <= 32'b00000000000000000000000000000000;
    tmp_6_7_cast_reg_2335[54:23] <= 32'b00000000000000000000000000000000;
end

endmodule //ntt
