# This script segment is generated automatically by AutoPilot

# Memory (RAM/ROM)  definition:
set ID 1
set hasByteEnable 0
set MemName ntt_zetas
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 23
set AddrRange 256
set AddrWd 8
set TrueReset 0
set IsROM 1
set ROMData { "00000000000000000000000" "00000000110010011110111" "10110000001000100000011" "11101111111010100000100" "00000111001111001000100" "11101000000000100011001" "11100101000000100101001" "00001110001111000100100" "00110111101111000101011" "01000111110100100101011" "11110100110010010101110" "10111111111010010000000" "01011111001101001110101" "10100111101101100001010" "01011110111101001001001" "01010001110010100100111" "01010011001011001011000" "00011111010000001110000" "11011110110010110100101" "01101101011011110001000" "11101110111110110010001" "11011101100101010100001" "01001111111100101101000" "10111111011001101111100" "10111111000110111010111" "10001001111101011101000" "11010101000010011111000" "10011011101110010011001" "00110101101000000110101" "11111111001010000100011" "01111010011001000000001" "00001000100010111000101" "01010010100101001100111" "00000010111011000100000" "01011101111010011001101" "01101011101111011000101" "11001101000010100000100" "10010010001000000101101" "10110010010011111010101" "01110111011111010101111" "10001001111010110000110" "10100010110111001111101" "01101101000101010010110" "10101000001111001000010" "01101100000010000000000" "11110110100101001001110" "01000111101011010011100" "11101111010010101011110" "11001011111001000111110" "11001101100101011010111" "01101010111111000011110" "10001011000111101011010" "01101011000010000111111" "10111110011011000011000" "11001110111010001011101" "01110000111001110001100" "00011000110001110101000" "00010000001101110011010" "00011101000111101110110" "01110110011100001010011" "01110111000010100110100" "10110001101110000110001" "00111111001110101010100" "10101010010111100101110" "10000111110011011100110" "11010001000110010000010" "10001111100000111010000" "10100010111100000011010" "11010011011011001011110" "01101010000100111101110" "01000010011010111000111" "11001111010111110111100" "11011001010111101110110" "00111011001011101110010" "10000011001000001110011" "11100001001110011110111" "10011110011001010000001" "10011111011001010101111" "10010000111000011100001" "00000011110111111001010" "01101000001000011110010" "11100001101111010000110" "01000001100011000111000" "01010010110111010011111" "10100101001011110100100" "10001111000010001001100" "11110011001101001101110" "10110100001010000001010" "11101011010001010000011" "11011010010000100010100" "11111111000011000111100" "11010111110100111111000" "11110100000101111011110" "00101001001010111010100" "00111000100010101100011" "11010100000110001100011" "10011001101101111101010" "00001000000101011110000" "00001111100010000010111" "01011110100010110001000" "00000001010110100000000" "11011110001011010111111" "00011011100110101000100" "01111000110011101011010" "10001110000101111001011" "11111111011111001111111" "00110010011100101001000" "10011100100100111000001" "01001000111010101101100" "11111001010011111100000" "00010111001100010100001" "11010111100100000001001" "00000101110010001101100" "10010011010100000001001" "01100000011011011000010" "11000111001111111110111" "10110110001110010010100" "11111010010101011100001" "00101000001001100000101" "00101000111011110010010" "00100111001111000100101" "11001111011000011100001" "11100110111100101000101" "11010011110100000000011" "10100011100111010100011" "10001001010011110011101" "10010001000000001011000" "01110101001011111011001" "00111111110101010010011" "01100111111111101011010" "01000110101100011010100" "01110100100000111111000" "10011001101111101110011" "01000100011110111111011" "10110101000101110100000" "10010011000010000100011" "00001000001001011110101" "01001010010010110000111" "11011010000010011110001" "01101011001101101011101" "10010100010100010100001" "10001101000001011111101" "11011011001101101010111" "10011110010010111011111" "00011011011111001011110" "00111000101111000011010" "00011011110000011100110" "00011000111111101011010" "00001111000111110000011" "11001110100001010001011" "11111110011011100000101" "11101111110011011111101" "11101011110000000100010" "10100000011101011110111" "00111110000000010000100" "01100001110111110000110" "10010011001100101111110" "11101111101110011010111" "11101000010010110010011" "10010010000000111000011" "00001010011100100011001" "00001000110000100001100" "10110101010110101000010" "01111101011000000011011" "01101000111001011100111" "10011001110000000111100" "00110100111110011000111" "00000110001100100100100" "01010110101111011100101" "01010010001000110011001" "10110000101101000111011" "00100110100110101110001" "01111011110000100011100" "00100110000100110000100" "01001011111000001010001" "00110000101101001000110" "10001100110010100011001" "00100110001010010111110" "01010000011100010010001" "10010011011101110010001" "10100100011000010001010" "00111001000010100111111" "00111010000101101001011" "11011111101011010100111" "11010111000100010111111" "00100101110000100011011" "10011010011111000111111" "11010100000110100110000" "11110001111110111100101" "00101000000011011000111" "01100100111001010000011" "11000011110110101101111" "11011000101100101010100" "00111010100000010011001" "10110010000010101111001" "11010101110010110101110" "00101101110010000000101" "00010111101101111100111" "01000100001110111101000" "01100111111100011001111" "11101111001100100110101" "10101001010101000001101" "11001100101111111111001" "11000111011000101011000" "10110000111000100011100" "10001110000110000010011" "00010010001000011011000" "10001100011111000100000" "11000010010011001011001" "01001010001110110001011" "01001010111001110110111" "11111010101110010010000" "00111011101110110011000" "01100110110100010011000" "00000101101010010111011" "11011010111001110101000" "10011110100110010111111" "00000100111110000011100" "00110001010101000001000" "01011011111110101110001" "00011000101110010100101" "00110010011011110011010" "10001111000000101101000" "11001000110110000111110" "10100011000000100111101" "01101011100010100111001" "01110110000000100010101" "00001000001110111000000" "01000011100010011110111" "11100001111101111110101" "00110100011010111100111" "00001110011010000001110" "11110010101110101000110" "00110100100110011010000" "11001000101110010101111" "00111010010011001101000" "11001100110111010011001" "11011110000011000110100" "11110111110010111011011" "10001010101111111011100" "10100110000011101100101" "10111011100000110110000" "11110010111001111011110" "10111001111110100001010" "00000101100110010010011" "11100001111100000000110" "00110001001110000101010" "10010011100010110101010" "11101110110101001010001" "01110111100111100101100" "11111110010001101001111" "11010110001011011100000" "01111000001010111001010" "00101010101111001101000" "11100101111011010110111" "00111100010100111001110" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.772
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 2 \
    name p \
    reset_level 1 \
    sync_rst true \
    dir IO \
    corename p \
    op interface \
    ports { p_address0 { O 8 vector } p_ce0 { O 1 bit } p_we0 { O 1 bit } p_d0 { O 32 vector } p_q0 { I 32 vector } p_address1 { O 8 vector } p_ce1 { O 1 bit } p_q1 { I 32 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'p'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


