// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module montgomery_reduce (
        ap_clk,
        ap_rst,
        a,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [63:0] a;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg   [63:0] a_read_reg_57;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] a_read_reg_57_pp0_iter1_reg;
wire   [31:0] t_fu_24_p2;
reg   [31:0] t_reg_62;
wire   [54:0] t_1_fu_33_p2;
reg   [54:0] t_1_reg_67;
wire    ap_block_pp0_stage0;
wire  signed [31:0] tmp_403_fu_20_p1;
wire   [31:0] t_1_fu_33_p1;
wire   [63:0] t_2_cast_fu_39_p1;
wire   [63:0] t_2_fu_42_p2;
reg    ap_ce_reg;
reg   [63:0] a_int_reg;
reg   [31:0] ap_return_int_reg;
wire   [54:0] t_1_fu_33_p10;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        a_int_reg <= a;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_read_reg_57 <= a_int_reg;
        a_read_reg_57_pp0_iter1_reg <= a_read_reg_57;
        t_1_reg_67 <= t_1_fu_33_p2;
        t_reg_62 <= t_fu_24_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= {{t_2_fu_42_p2[63:32]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = {{t_2_fu_42_p2[63:32]}};
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign t_1_fu_33_p1 = t_1_fu_33_p10;

assign t_1_fu_33_p10 = t_reg_62;

assign t_1_fu_33_p2 = (55'd8380417 * t_1_fu_33_p1);

assign t_2_cast_fu_39_p1 = t_1_reg_67;

assign t_2_fu_42_p2 = (a_read_reg_57_pp0_iter1_reg + t_2_cast_fu_39_p1);

assign t_fu_24_p2 = ($signed(32'd4236238847) * $signed(tmp_403_fu_20_p1));

assign tmp_403_fu_20_p1 = a_int_reg[31:0];

endmodule //montgomery_reduce
