// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "montgomery_reduce.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic montgomery_reduce::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic montgomery_reduce::ap_const_logic_0 = sc_dt::Log_0;
const bool montgomery_reduce::ap_const_boolean_1 = true;
const bool montgomery_reduce::ap_const_boolean_0 = false;
const sc_lv<32> montgomery_reduce::ap_const_lv32_FC7FDFFF = "11111100011111111101111111111111";
const sc_lv<55> montgomery_reduce::ap_const_lv55_7FE001 = "11111111110000000000001";
const sc_lv<32> montgomery_reduce::ap_const_lv32_20 = "100000";
const sc_lv<32> montgomery_reduce::ap_const_lv32_3F = "111111";

montgomery_reduce::montgomery_reduce(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_return);
    sensitive << ( t_2_fu_42_p2 );
    sensitive << ( ap_ce_reg );
    sensitive << ( ap_return_int_reg );

    SC_METHOD(thread_t_1_fu_33_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( t_1_fu_33_p10 );

    SC_METHOD(thread_t_1_fu_33_p10);
    sensitive << ( t_reg_62 );

    SC_METHOD(thread_t_1_fu_33_p2);
    sensitive << ( t_1_fu_33_p1 );

    SC_METHOD(thread_t_2_cast_fu_39_p1);
    sensitive << ( t_1_reg_67 );

    SC_METHOD(thread_t_2_fu_42_p2);
    sensitive << ( a_read_reg_57_pp0_iter1_reg );
    sensitive << ( t_2_cast_fu_39_p1 );

    SC_METHOD(thread_t_fu_24_p2);
    sensitive << ( tmp_403_fu_20_p1 );

    SC_METHOD(thread_tmp_403_fu_20_p1);
    sensitive << ( a_int_reg );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "montgomery_reduce_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, a, "(port)a");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, a_read_reg_57, "a_read_reg_57");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, a_read_reg_57_pp0_iter1_reg, "a_read_reg_57_pp0_iter1_reg");
    sc_trace(mVcdFile, t_fu_24_p2, "t_fu_24_p2");
    sc_trace(mVcdFile, t_reg_62, "t_reg_62");
    sc_trace(mVcdFile, t_1_fu_33_p2, "t_1_fu_33_p2");
    sc_trace(mVcdFile, t_1_reg_67, "t_1_reg_67");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_403_fu_20_p1, "tmp_403_fu_20_p1");
    sc_trace(mVcdFile, t_1_fu_33_p1, "t_1_fu_33_p1");
    sc_trace(mVcdFile, t_2_cast_fu_39_p1, "t_2_cast_fu_39_p1");
    sc_trace(mVcdFile, t_2_fu_42_p2, "t_2_fu_42_p2");
    sc_trace(mVcdFile, ap_ce_reg, "ap_ce_reg");
    sc_trace(mVcdFile, a_int_reg, "a_int_reg");
    sc_trace(mVcdFile, ap_return_int_reg, "ap_return_int_reg");
    sc_trace(mVcdFile, t_1_fu_33_p10, "t_1_fu_33_p10");
#endif

    }
}

montgomery_reduce::~montgomery_reduce() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void montgomery_reduce::thread_ap_clk_no_reset_() {
    ap_ce_reg = ap_ce.read();
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())) {
        a_int_reg = a.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce_reg.read(), ap_const_logic_1))) {
        a_read_reg_57 = a_int_reg.read();
        a_read_reg_57_pp0_iter1_reg = a_read_reg_57.read();
        t_1_reg_67 = t_1_fu_33_p2.read();
        t_reg_62 = t_fu_24_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read())) {
        ap_return_int_reg = t_2_fu_42_p2.read().range(63, 32);
    }
}

void montgomery_reduce::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void montgomery_reduce::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void montgomery_reduce::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void montgomery_reduce::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void montgomery_reduce::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void montgomery_reduce::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_ce_reg.read())) {
        ap_return = ap_return_int_reg.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read())) {
        ap_return = t_2_fu_42_p2.read().range(63, 32);
    }
}

void montgomery_reduce::thread_t_1_fu_33_p1() {
    t_1_fu_33_p1 =  (sc_lv<32>) (t_1_fu_33_p10.read());
}

void montgomery_reduce::thread_t_1_fu_33_p10() {
    t_1_fu_33_p10 = esl_zext<55,32>(t_reg_62.read());
}

void montgomery_reduce::thread_t_1_fu_33_p2() {
    t_1_fu_33_p2 = (!ap_const_lv55_7FE001.is_01() || !t_1_fu_33_p1.read().is_01())? sc_lv<55>(): sc_biguint<55>(ap_const_lv55_7FE001) * sc_biguint<32>(t_1_fu_33_p1.read());
}

void montgomery_reduce::thread_t_2_cast_fu_39_p1() {
    t_2_cast_fu_39_p1 = esl_zext<64,55>(t_1_reg_67.read());
}

void montgomery_reduce::thread_t_2_fu_42_p2() {
    t_2_fu_42_p2 = (!a_read_reg_57_pp0_iter1_reg.read().is_01() || !t_2_cast_fu_39_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(a_read_reg_57_pp0_iter1_reg.read()) + sc_biguint<64>(t_2_cast_fu_39_p1.read()));
}

void montgomery_reduce::thread_t_fu_24_p2() {
    t_fu_24_p2 = (!ap_const_lv32_FC7FDFFF.is_01() || !tmp_403_fu_20_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(ap_const_lv32_FC7FDFFF) * sc_bigint<32>(tmp_403_fu_20_p1.read());
}

void montgomery_reduce::thread_tmp_403_fu_20_p1() {
    tmp_403_fu_20_p1 = a_int_reg.read().range(32-1, 0);
}

}

